// Code generated by protoc-gen-go. DO NOT EDIT.
// source: benchmark.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SizeType int32

const (
	SizeType_Small  SizeType = 0
	SizeType_Medium SizeType = 1
	SizeType_Large  SizeType = 2
)

var SizeType_name = map[int32]string{
	0: "Small",
	1: "Medium",
	2: "Large",
}

var SizeType_value = map[string]int32{
	"Small":  0,
	"Medium": 1,
	"Large":  2,
}

func (x SizeType) String() string {
	return proto.EnumName(SizeType_name, int32(x))
}

func (SizeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_17088f88d67e5b2d, []int{0}
}

type FetchProtoDataRequest struct {
	Size                 SizeType `protobuf:"varint,1,opt,name=size,proto3,enum=protos.SizeType" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchProtoDataRequest) Reset()         { *m = FetchProtoDataRequest{} }
func (m *FetchProtoDataRequest) String() string { return proto.CompactTextString(m) }
func (*FetchProtoDataRequest) ProtoMessage()    {}
func (*FetchProtoDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17088f88d67e5b2d, []int{0}
}

func (m *FetchProtoDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchProtoDataRequest.Unmarshal(m, b)
}
func (m *FetchProtoDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchProtoDataRequest.Marshal(b, m, deterministic)
}
func (m *FetchProtoDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchProtoDataRequest.Merge(m, src)
}
func (m *FetchProtoDataRequest) XXX_Size() int {
	return xxx_messageInfo_FetchProtoDataRequest.Size(m)
}
func (m *FetchProtoDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchProtoDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchProtoDataRequest proto.InternalMessageInfo

func (m *FetchProtoDataRequest) GetSize() SizeType {
	if m != nil {
		return m.Size
	}
	return SizeType_Small
}

type FetchProtoDataResponse struct {
	SomeInt32            []int32             `protobuf:"varint,1,rep,packed,name=some_int32,json=someInt32,proto3" json:"some_int32,omitempty"`
	SomeInt64            []int64             `protobuf:"varint,2,rep,packed,name=some_int64,json=someInt64,proto3" json:"some_int64,omitempty"`
	SomeFloat            []float32           `protobuf:"fixed32,3,rep,packed,name=some_float,json=someFloat,proto3" json:"some_float,omitempty"`
	SomeDouble           []float64           `protobuf:"fixed64,4,rep,packed,name=some_double,json=someDouble,proto3" json:"some_double,omitempty"`
	SomeBool             []bool              `protobuf:"varint,5,rep,packed,name=some_bool,json=someBool,proto3" json:"some_bool,omitempty"`
	SomeString           []string            `protobuf:"bytes,6,rep,name=some_string,json=someString,proto3" json:"some_string,omitempty"`
	AInt32               int32               `protobuf:"varint,7,opt,name=a_int32,json=aInt32,proto3" json:"a_int32,omitempty"`
	AInt64               int64               `protobuf:"varint,8,opt,name=a_int64,json=aInt64,proto3" json:"a_int64,omitempty"`
	AFloat               float32             `protobuf:"fixed32,9,opt,name=a_float,json=aFloat,proto3" json:"a_float,omitempty"`
	ADouble              float64             `protobuf:"fixed64,10,opt,name=a_double,json=aDouble,proto3" json:"a_double,omitempty"`
	ABool                bool                `protobuf:"varint,11,opt,name=a_bool,json=aBool,proto3" json:"a_bool,omitempty"`
	AString              string              `protobuf:"bytes,12,opt,name=a_string,json=aString,proto3" json:"a_string,omitempty"`
	SomeBytes            []byte              `protobuf:"bytes,13,opt,name=some_bytes,json=someBytes,proto3" json:"some_bytes,omitempty"`
	AStruct              *AStruct            `protobuf:"bytes,14,opt,name=a_struct,json=aStruct,proto3" json:"a_struct,omitempty"`
	AStructMap           map[string]*AStruct `protobuf:"bytes,15,rep,name=a_struct_map,json=aStructMap,proto3" json:"a_struct_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SomeStruct           []*AStruct          `protobuf:"bytes,16,rep,name=some_struct,json=someStruct,proto3" json:"some_struct,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *FetchProtoDataResponse) Reset()         { *m = FetchProtoDataResponse{} }
func (m *FetchProtoDataResponse) String() string { return proto.CompactTextString(m) }
func (*FetchProtoDataResponse) ProtoMessage()    {}
func (*FetchProtoDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17088f88d67e5b2d, []int{1}
}

func (m *FetchProtoDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchProtoDataResponse.Unmarshal(m, b)
}
func (m *FetchProtoDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchProtoDataResponse.Marshal(b, m, deterministic)
}
func (m *FetchProtoDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchProtoDataResponse.Merge(m, src)
}
func (m *FetchProtoDataResponse) XXX_Size() int {
	return xxx_messageInfo_FetchProtoDataResponse.Size(m)
}
func (m *FetchProtoDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchProtoDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchProtoDataResponse proto.InternalMessageInfo

func (m *FetchProtoDataResponse) GetSomeInt32() []int32 {
	if m != nil {
		return m.SomeInt32
	}
	return nil
}

func (m *FetchProtoDataResponse) GetSomeInt64() []int64 {
	if m != nil {
		return m.SomeInt64
	}
	return nil
}

func (m *FetchProtoDataResponse) GetSomeFloat() []float32 {
	if m != nil {
		return m.SomeFloat
	}
	return nil
}

func (m *FetchProtoDataResponse) GetSomeDouble() []float64 {
	if m != nil {
		return m.SomeDouble
	}
	return nil
}

func (m *FetchProtoDataResponse) GetSomeBool() []bool {
	if m != nil {
		return m.SomeBool
	}
	return nil
}

func (m *FetchProtoDataResponse) GetSomeString() []string {
	if m != nil {
		return m.SomeString
	}
	return nil
}

func (m *FetchProtoDataResponse) GetAInt32() int32 {
	if m != nil {
		return m.AInt32
	}
	return 0
}

func (m *FetchProtoDataResponse) GetAInt64() int64 {
	if m != nil {
		return m.AInt64
	}
	return 0
}

func (m *FetchProtoDataResponse) GetAFloat() float32 {
	if m != nil {
		return m.AFloat
	}
	return 0
}

func (m *FetchProtoDataResponse) GetADouble() float64 {
	if m != nil {
		return m.ADouble
	}
	return 0
}

func (m *FetchProtoDataResponse) GetABool() bool {
	if m != nil {
		return m.ABool
	}
	return false
}

func (m *FetchProtoDataResponse) GetAString() string {
	if m != nil {
		return m.AString
	}
	return ""
}

func (m *FetchProtoDataResponse) GetSomeBytes() []byte {
	if m != nil {
		return m.SomeBytes
	}
	return nil
}

func (m *FetchProtoDataResponse) GetAStruct() *AStruct {
	if m != nil {
		return m.AStruct
	}
	return nil
}

func (m *FetchProtoDataResponse) GetAStructMap() map[string]*AStruct {
	if m != nil {
		return m.AStructMap
	}
	return nil
}

func (m *FetchProtoDataResponse) GetSomeStruct() []*AStruct {
	if m != nil {
		return m.SomeStruct
	}
	return nil
}

type AStruct struct {
	SomeInt32            []int32   `protobuf:"varint,1,rep,packed,name=some_int32,json=someInt32,proto3" json:"some_int32,omitempty"`
	SomeInt64            []int64   `protobuf:"varint,2,rep,packed,name=some_int64,json=someInt64,proto3" json:"some_int64,omitempty"`
	SomeFloat            []float32 `protobuf:"fixed32,3,rep,packed,name=some_float,json=someFloat,proto3" json:"some_float,omitempty"`
	SomeDouble           []float64 `protobuf:"fixed64,4,rep,packed,name=some_double,json=someDouble,proto3" json:"some_double,omitempty"`
	SomeBool             []bool    `protobuf:"varint,5,rep,packed,name=some_bool,json=someBool,proto3" json:"some_bool,omitempty"`
	SomeString           []string  `protobuf:"bytes,6,rep,name=some_string,json=someString,proto3" json:"some_string,omitempty"`
	AInt32               int32     `protobuf:"varint,7,opt,name=a_int32,json=aInt32,proto3" json:"a_int32,omitempty"`
	AInt64               int64     `protobuf:"varint,8,opt,name=a_int64,json=aInt64,proto3" json:"a_int64,omitempty"`
	AFloat               float32   `protobuf:"fixed32,9,opt,name=a_float,json=aFloat,proto3" json:"a_float,omitempty"`
	ADouble              float64   `protobuf:"fixed64,10,opt,name=a_double,json=aDouble,proto3" json:"a_double,omitempty"`
	ABool                bool      `protobuf:"varint,11,opt,name=a_bool,json=aBool,proto3" json:"a_bool,omitempty"`
	AString              string    `protobuf:"bytes,12,opt,name=a_string,json=aString,proto3" json:"a_string,omitempty"`
	SomeBytes            []byte    `protobuf:"bytes,13,opt,name=some_bytes,json=someBytes,proto3" json:"some_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AStruct) Reset()         { *m = AStruct{} }
func (m *AStruct) String() string { return proto.CompactTextString(m) }
func (*AStruct) ProtoMessage()    {}
func (*AStruct) Descriptor() ([]byte, []int) {
	return fileDescriptor_17088f88d67e5b2d, []int{2}
}

func (m *AStruct) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AStruct.Unmarshal(m, b)
}
func (m *AStruct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AStruct.Marshal(b, m, deterministic)
}
func (m *AStruct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AStruct.Merge(m, src)
}
func (m *AStruct) XXX_Size() int {
	return xxx_messageInfo_AStruct.Size(m)
}
func (m *AStruct) XXX_DiscardUnknown() {
	xxx_messageInfo_AStruct.DiscardUnknown(m)
}

var xxx_messageInfo_AStruct proto.InternalMessageInfo

func (m *AStruct) GetSomeInt32() []int32 {
	if m != nil {
		return m.SomeInt32
	}
	return nil
}

func (m *AStruct) GetSomeInt64() []int64 {
	if m != nil {
		return m.SomeInt64
	}
	return nil
}

func (m *AStruct) GetSomeFloat() []float32 {
	if m != nil {
		return m.SomeFloat
	}
	return nil
}

func (m *AStruct) GetSomeDouble() []float64 {
	if m != nil {
		return m.SomeDouble
	}
	return nil
}

func (m *AStruct) GetSomeBool() []bool {
	if m != nil {
		return m.SomeBool
	}
	return nil
}

func (m *AStruct) GetSomeString() []string {
	if m != nil {
		return m.SomeString
	}
	return nil
}

func (m *AStruct) GetAInt32() int32 {
	if m != nil {
		return m.AInt32
	}
	return 0
}

func (m *AStruct) GetAInt64() int64 {
	if m != nil {
		return m.AInt64
	}
	return 0
}

func (m *AStruct) GetAFloat() float32 {
	if m != nil {
		return m.AFloat
	}
	return 0
}

func (m *AStruct) GetADouble() float64 {
	if m != nil {
		return m.ADouble
	}
	return 0
}

func (m *AStruct) GetABool() bool {
	if m != nil {
		return m.ABool
	}
	return false
}

func (m *AStruct) GetAString() string {
	if m != nil {
		return m.AString
	}
	return ""
}

func (m *AStruct) GetSomeBytes() []byte {
	if m != nil {
		return m.SomeBytes
	}
	return nil
}

func init() {
	proto.RegisterEnum("protos.SizeType", SizeType_name, SizeType_value)
	proto.RegisterType((*FetchProtoDataRequest)(nil), "protos.FetchProtoDataRequest")
	proto.RegisterType((*FetchProtoDataResponse)(nil), "protos.FetchProtoDataResponse")
	proto.RegisterMapType((map[string]*AStruct)(nil), "protos.FetchProtoDataResponse.AStructMapEntry")
	proto.RegisterType((*AStruct)(nil), "protos.AStruct")
}

func init() {
	proto.RegisterFile("benchmark.proto", fileDescriptor_17088f88d67e5b2d)
}

var fileDescriptor_17088f88d67e5b2d = []byte{
	// 480 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x94, 0xc1, 0x6b, 0xd4, 0x40,
	0x14, 0xc6, 0x9d, 0x4c, 0x93, 0x4d, 0xde, 0xae, 0xdd, 0x30, 0x50, 0x1d, 0x15, 0x71, 0x58, 0x14,
	0x86, 0x22, 0x8b, 0x6c, 0x97, 0x45, 0x04, 0x0f, 0x96, 0x5a, 0x10, 0xac, 0x94, 0x59, 0xef, 0xcb,
	0x24, 0x1d, 0xdb, 0xd0, 0x24, 0x13, 0x93, 0x89, 0xb0, 0xfd, 0x17, 0xfc, 0x97, 0x3d, 0x48, 0x66,
	0x92, 0x55, 0x6a, 0xcf, 0x9e, 0x7a, 0x4a, 0xf2, 0x7d, 0xef, 0x7b, 0xfc, 0xf2, 0xe6, 0x31, 0x30,
	0x4d, 0x54, 0x99, 0x5e, 0x15, 0xb2, 0xbe, 0x9e, 0x57, 0xb5, 0x36, 0x9a, 0x04, 0xf6, 0xd1, 0xcc,
	0xde, 0xc3, 0xc1, 0xa9, 0x32, 0xe9, 0xd5, 0x79, 0xf7, 0x79, 0x22, 0x8d, 0x14, 0xea, 0x7b, 0xab,
	0x1a, 0x43, 0x5e, 0xc2, 0x5e, 0x93, 0xdd, 0x28, 0x8a, 0x18, 0xe2, 0xfb, 0x8b, 0xd8, 0xc5, 0x9a,
	0xf9, 0x3a, 0xbb, 0x51, 0x5f, 0xb7, 0x95, 0x12, 0xd6, 0x9d, 0xfd, 0xf4, 0xe1, 0xd1, 0xed, 0x7c,
	0x53, 0xe9, 0xb2, 0x51, 0xe4, 0x39, 0x40, 0xa3, 0x0b, 0xb5, 0xc9, 0x4a, 0x73, 0xb4, 0xa0, 0x88,
	0x61, 0xee, 0x8b, 0xa8, 0x53, 0x3e, 0x75, 0xc2, 0xdf, 0xf6, 0x6a, 0x49, 0x3d, 0x86, 0x39, 0xde,
	0xd9, 0xab, 0xe5, 0xce, 0xfe, 0x96, 0x6b, 0x69, 0x28, 0x66, 0x98, 0x7b, 0xce, 0x3e, 0xed, 0x04,
	0xf2, 0x02, 0xc6, 0xd6, 0xbe, 0xd0, 0x6d, 0x92, 0x2b, 0xba, 0xc7, 0x30, 0x47, 0xc2, 0x26, 0x4e,
	0xac, 0x42, 0x9e, 0x81, 0xad, 0xde, 0x24, 0x5a, 0xe7, 0xd4, 0x67, 0x98, 0x87, 0x22, 0xec, 0x84,
	0x63, 0xad, 0xf3, 0x5d, 0xba, 0x31, 0x75, 0x56, 0x5e, 0xd2, 0x80, 0x61, 0x1e, 0xb9, 0xf4, 0xda,
	0x2a, 0xe4, 0x31, 0x8c, 0x64, 0x0f, 0x3e, 0x62, 0x88, 0xfb, 0x22, 0x90, 0x8e, 0x7a, 0x30, 0x56,
	0x4b, 0x1a, 0x32, 0xc4, 0xb1, 0x33, 0x56, 0x4b, 0x67, 0x38, 0xd8, 0x88, 0x21, 0xee, 0x89, 0x40,
	0x3a, 0xd2, 0x27, 0x10, 0xca, 0x01, 0x13, 0x18, 0xe2, 0x48, 0x8c, 0x64, 0xcf, 0x78, 0x00, 0x81,
	0x74, 0x80, 0x63, 0x86, 0x78, 0x28, 0x7c, 0x69, 0xe9, 0x6c, 0xa2, 0x47, 0x9b, 0x30, 0xc4, 0x23,
	0x31, 0x92, 0x3d, 0xd7, 0x30, 0x95, 0x64, 0x6b, 0x54, 0x43, 0x1f, 0x32, 0xc4, 0x27, 0x6e, 0x2a,
	0xc7, 0x9d, 0x40, 0x0e, 0xfb, 0x64, 0x9b, 0x1a, 0xba, 0xcf, 0x10, 0x1f, 0x2f, 0xa6, 0xc3, 0xb9,
	0x7d, 0x58, 0x5b, 0xd9, 0xb5, 0x6a, 0x53, 0x43, 0xce, 0x61, 0x32, 0xd4, 0x6e, 0x0a, 0x59, 0xd1,
	0x29, 0xc3, 0x7c, 0xbc, 0x98, 0x0f, 0xf5, 0x77, 0x1f, 0xea, 0xd0, 0xe6, 0x4c, 0x56, 0x1f, 0x4b,
	0x53, 0x6f, 0x05, 0xc8, 0x9d, 0x40, 0xde, 0xfc, 0x99, 0x6a, 0x07, 0x10, 0xdb, 0x86, 0xff, 0x00,
	0x0c, 0x63, 0x6e, 0x53, 0xf3, 0xf4, 0x0b, 0x4c, 0x6f, 0x35, 0x24, 0x31, 0xe0, 0x6b, 0xb5, 0xb5,
	0x5b, 0x17, 0x89, 0xee, 0x95, 0xbc, 0x02, 0xff, 0x87, 0xcc, 0x5b, 0x45, 0xbd, 0xbb, 0xff, 0xc8,
	0xb9, 0xef, 0xbc, 0xb7, 0x68, 0xf6, 0xcb, 0x83, 0x51, 0x2f, 0xdf, 0xaf, 0xdf, 0x7f, 0x5f, 0xbf,
	0xc3, 0xd7, 0x10, 0x0e, 0xd7, 0x03, 0x89, 0xc0, 0x5f, 0x17, 0x32, 0xcf, 0xe3, 0x07, 0x04, 0x20,
	0x38, 0x53, 0x17, 0x59, 0x5b, 0xc4, 0xa8, 0x93, 0x3f, 0xcb, 0xfa, 0x52, 0xc5, 0x5e, 0xe2, 0x6e,
	0xa0, 0xa3, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc4, 0xc4, 0xa9, 0x6a, 0x9b, 0x04, 0x00, 0x00,
}

// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: benchmark.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protos {

  /// <summary>Holder for reflection information generated from benchmark.proto</summary>
  public static partial class BenchmarkReflection {

    #region Descriptor
    /// <summary>File descriptor for benchmark.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BenchmarkReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9iZW5jaG1hcmsucHJvdG8SBnByb3RvcyIlChVGZXRjaFByb3RvRGF0YVJl",
            "cXVlc3QSDAoEc2l6ZRgBIAEoBSLfAwoWRmV0Y2hQcm90b0RhdGFSZXNwb25z",
            "ZRISCgpzb21lX2ludDMyGAEgAygFEhIKCnNvbWVfaW50NjQYAiADKAMSEgoK",
            "c29tZV9mbG9hdBgDIAMoAhITCgtzb21lX2RvdWJsZRgEIAMoARIRCglzb21l",
            "X2Jvb2wYBSADKAgSEwoLc29tZV9zdHJpbmcYBiADKAkSDwoHYV9pbnQzMhgH",
            "IAEoBRIPCgdhX2ludDY0GAggASgDEg8KB2FfZmxvYXQYCSABKAISEAoIYV9k",
            "b3VibGUYCiABKAESDgoGYV9ib29sGAsgASgIEhAKCGFfc3RyaW5nGAwgASgJ",
            "EhIKCnNvbWVfYnl0ZXMYDSABKAwSIQoIYV9zdHJ1Y3QYDiABKAsyDy5wcm90",
            "b3MuQVN0cnVjdBJECgxhX3N0cnVjdF9tYXAYDyADKAsyLi5wcm90b3MuRmV0",
            "Y2hQcm90b0RhdGFSZXNwb25zZS5BU3RydWN0TWFwRW50cnkSJAoLc29tZV9z",
            "dHJ1Y3QYECADKAsyDy5wcm90b3MuQVN0cnVjdBpCCg9BU3RydWN0TWFwRW50",
            "cnkSCwoDa2V5GAEgASgJEh4KBXZhbHVlGAIgASgLMg8ucHJvdG9zLkFTdHJ1",
            "Y3Q6AjgBIv0BCgdBU3RydWN0EhIKCnNvbWVfaW50MzIYASADKAUSEgoKc29t",
            "ZV9pbnQ2NBgCIAMoAxISCgpzb21lX2Zsb2F0GAMgAygCEhMKC3NvbWVfZG91",
            "YmxlGAQgAygBEhEKCXNvbWVfYm9vbBgFIAMoCBITCgtzb21lX3N0cmluZxgG",
            "IAMoCRIPCgdhX2ludDMyGAcgASgFEg8KB2FfaW50NjQYCCABKAMSDwoHYV9m",
            "bG9hdBgJIAEoAhIQCghhX2RvdWJsZRgKIAEoARIOCgZhX2Jvb2wYCyABKAgS",
            "EAoIYV9zdHJpbmcYDCABKAkSEgoKc29tZV9ieXRlcxgNIAEoDGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.FetchProtoDataRequest), global::Protos.FetchProtoDataRequest.Parser, new[]{ "Size" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.FetchProtoDataResponse), global::Protos.FetchProtoDataResponse.Parser, new[]{ "SomeInt32", "SomeInt64", "SomeFloat", "SomeDouble", "SomeBool", "SomeString", "AInt32", "AInt64", "AFloat", "ADouble", "ABool", "AString", "SomeBytes", "AStruct", "AStructMap", "SomeStruct" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.AStruct), global::Protos.AStruct.Parser, new[]{ "SomeInt32", "SomeInt64", "SomeFloat", "SomeDouble", "SomeBool", "SomeString", "AInt32", "AInt64", "AFloat", "ADouble", "ABool", "AString", "SomeBytes" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FetchProtoDataRequest : pb::IMessage<FetchProtoDataRequest> {
    private static readonly pb::MessageParser<FetchProtoDataRequest> _parser = new pb::MessageParser<FetchProtoDataRequest>(() => new FetchProtoDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FetchProtoDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.BenchmarkReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchProtoDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchProtoDataRequest(FetchProtoDataRequest other) : this() {
      size_ = other.size_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchProtoDataRequest Clone() {
      return new FetchProtoDataRequest(this);
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 1;
    private int size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FetchProtoDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FetchProtoDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Size != other.Size) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Size != 0) hash ^= Size.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Size != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Size);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Size != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Size);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FetchProtoDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.Size != 0) {
        Size = other.Size;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Size = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FetchProtoDataResponse : pb::IMessage<FetchProtoDataResponse> {
    private static readonly pb::MessageParser<FetchProtoDataResponse> _parser = new pb::MessageParser<FetchProtoDataResponse>(() => new FetchProtoDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FetchProtoDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.BenchmarkReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchProtoDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchProtoDataResponse(FetchProtoDataResponse other) : this() {
      someInt32_ = other.someInt32_.Clone();
      someInt64_ = other.someInt64_.Clone();
      someFloat_ = other.someFloat_.Clone();
      someDouble_ = other.someDouble_.Clone();
      someBool_ = other.someBool_.Clone();
      someString_ = other.someString_.Clone();
      aInt32_ = other.aInt32_;
      aInt64_ = other.aInt64_;
      aFloat_ = other.aFloat_;
      aDouble_ = other.aDouble_;
      aBool_ = other.aBool_;
      aString_ = other.aString_;
      someBytes_ = other.someBytes_;
      aStruct_ = other.aStruct_ != null ? other.aStruct_.Clone() : null;
      aStructMap_ = other.aStructMap_.Clone();
      someStruct_ = other.someStruct_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchProtoDataResponse Clone() {
      return new FetchProtoDataResponse(this);
    }

    /// <summary>Field number for the "some_int32" field.</summary>
    public const int SomeInt32FieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_someInt32_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> someInt32_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> SomeInt32 {
      get { return someInt32_; }
    }

    /// <summary>Field number for the "some_int64" field.</summary>
    public const int SomeInt64FieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_someInt64_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> someInt64_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> SomeInt64 {
      get { return someInt64_; }
    }

    /// <summary>Field number for the "some_float" field.</summary>
    public const int SomeFloatFieldNumber = 3;
    private static readonly pb::FieldCodec<float> _repeated_someFloat_codec
        = pb::FieldCodec.ForFloat(26);
    private readonly pbc::RepeatedField<float> someFloat_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> SomeFloat {
      get { return someFloat_; }
    }

    /// <summary>Field number for the "some_double" field.</summary>
    public const int SomeDoubleFieldNumber = 4;
    private static readonly pb::FieldCodec<double> _repeated_someDouble_codec
        = pb::FieldCodec.ForDouble(34);
    private readonly pbc::RepeatedField<double> someDouble_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> SomeDouble {
      get { return someDouble_; }
    }

    /// <summary>Field number for the "some_bool" field.</summary>
    public const int SomeBoolFieldNumber = 5;
    private static readonly pb::FieldCodec<bool> _repeated_someBool_codec
        = pb::FieldCodec.ForBool(42);
    private readonly pbc::RepeatedField<bool> someBool_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> SomeBool {
      get { return someBool_; }
    }

    /// <summary>Field number for the "some_string" field.</summary>
    public const int SomeStringFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_someString_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> someString_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SomeString {
      get { return someString_; }
    }

    /// <summary>Field number for the "a_int32" field.</summary>
    public const int AInt32FieldNumber = 7;
    private int aInt32_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AInt32 {
      get { return aInt32_; }
      set {
        aInt32_ = value;
      }
    }

    /// <summary>Field number for the "a_int64" field.</summary>
    public const int AInt64FieldNumber = 8;
    private long aInt64_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AInt64 {
      get { return aInt64_; }
      set {
        aInt64_ = value;
      }
    }

    /// <summary>Field number for the "a_float" field.</summary>
    public const int AFloatFieldNumber = 9;
    private float aFloat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AFloat {
      get { return aFloat_; }
      set {
        aFloat_ = value;
      }
    }

    /// <summary>Field number for the "a_double" field.</summary>
    public const int ADoubleFieldNumber = 10;
    private double aDouble_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ADouble {
      get { return aDouble_; }
      set {
        aDouble_ = value;
      }
    }

    /// <summary>Field number for the "a_bool" field.</summary>
    public const int ABoolFieldNumber = 11;
    private bool aBool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ABool {
      get { return aBool_; }
      set {
        aBool_ = value;
      }
    }

    /// <summary>Field number for the "a_string" field.</summary>
    public const int AStringFieldNumber = 12;
    private string aString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AString {
      get { return aString_; }
      set {
        aString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "some_bytes" field.</summary>
    public const int SomeBytesFieldNumber = 13;
    private pb::ByteString someBytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SomeBytes {
      get { return someBytes_; }
      set {
        someBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "a_struct" field.</summary>
    public const int AStructFieldNumber = 14;
    private global::Protos.AStruct aStruct_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.AStruct AStruct {
      get { return aStruct_; }
      set {
        aStruct_ = value;
      }
    }

    /// <summary>Field number for the "a_struct_map" field.</summary>
    public const int AStructMapFieldNumber = 15;
    private static readonly pbc::MapField<string, global::Protos.AStruct>.Codec _map_aStructMap_codec
        = new pbc::MapField<string, global::Protos.AStruct>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Protos.AStruct.Parser), 122);
    private readonly pbc::MapField<string, global::Protos.AStruct> aStructMap_ = new pbc::MapField<string, global::Protos.AStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Protos.AStruct> AStructMap {
      get { return aStructMap_; }
    }

    /// <summary>Field number for the "some_struct" field.</summary>
    public const int SomeStructFieldNumber = 16;
    private static readonly pb::FieldCodec<global::Protos.AStruct> _repeated_someStruct_codec
        = pb::FieldCodec.ForMessage(130, global::Protos.AStruct.Parser);
    private readonly pbc::RepeatedField<global::Protos.AStruct> someStruct_ = new pbc::RepeatedField<global::Protos.AStruct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protos.AStruct> SomeStruct {
      get { return someStruct_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FetchProtoDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FetchProtoDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!someInt32_.Equals(other.someInt32_)) return false;
      if(!someInt64_.Equals(other.someInt64_)) return false;
      if(!someFloat_.Equals(other.someFloat_)) return false;
      if(!someDouble_.Equals(other.someDouble_)) return false;
      if(!someBool_.Equals(other.someBool_)) return false;
      if(!someString_.Equals(other.someString_)) return false;
      if (AInt32 != other.AInt32) return false;
      if (AInt64 != other.AInt64) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AFloat, other.AFloat)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ADouble, other.ADouble)) return false;
      if (ABool != other.ABool) return false;
      if (AString != other.AString) return false;
      if (SomeBytes != other.SomeBytes) return false;
      if (!object.Equals(AStruct, other.AStruct)) return false;
      if (!AStructMap.Equals(other.AStructMap)) return false;
      if(!someStruct_.Equals(other.someStruct_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= someInt32_.GetHashCode();
      hash ^= someInt64_.GetHashCode();
      hash ^= someFloat_.GetHashCode();
      hash ^= someDouble_.GetHashCode();
      hash ^= someBool_.GetHashCode();
      hash ^= someString_.GetHashCode();
      if (AInt32 != 0) hash ^= AInt32.GetHashCode();
      if (AInt64 != 0L) hash ^= AInt64.GetHashCode();
      if (AFloat != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AFloat);
      if (ADouble != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ADouble);
      if (ABool != false) hash ^= ABool.GetHashCode();
      if (AString.Length != 0) hash ^= AString.GetHashCode();
      if (SomeBytes.Length != 0) hash ^= SomeBytes.GetHashCode();
      if (aStruct_ != null) hash ^= AStruct.GetHashCode();
      hash ^= AStructMap.GetHashCode();
      hash ^= someStruct_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      someInt32_.WriteTo(output, _repeated_someInt32_codec);
      someInt64_.WriteTo(output, _repeated_someInt64_codec);
      someFloat_.WriteTo(output, _repeated_someFloat_codec);
      someDouble_.WriteTo(output, _repeated_someDouble_codec);
      someBool_.WriteTo(output, _repeated_someBool_codec);
      someString_.WriteTo(output, _repeated_someString_codec);
      if (AInt32 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AInt32);
      }
      if (AInt64 != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(AInt64);
      }
      if (AFloat != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(AFloat);
      }
      if (ADouble != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(ADouble);
      }
      if (ABool != false) {
        output.WriteRawTag(88);
        output.WriteBool(ABool);
      }
      if (AString.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(AString);
      }
      if (SomeBytes.Length != 0) {
        output.WriteRawTag(106);
        output.WriteBytes(SomeBytes);
      }
      if (aStruct_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(AStruct);
      }
      aStructMap_.WriteTo(output, _map_aStructMap_codec);
      someStruct_.WriteTo(output, _repeated_someStruct_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += someInt32_.CalculateSize(_repeated_someInt32_codec);
      size += someInt64_.CalculateSize(_repeated_someInt64_codec);
      size += someFloat_.CalculateSize(_repeated_someFloat_codec);
      size += someDouble_.CalculateSize(_repeated_someDouble_codec);
      size += someBool_.CalculateSize(_repeated_someBool_codec);
      size += someString_.CalculateSize(_repeated_someString_codec);
      if (AInt32 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AInt32);
      }
      if (AInt64 != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AInt64);
      }
      if (AFloat != 0F) {
        size += 1 + 4;
      }
      if (ADouble != 0D) {
        size += 1 + 8;
      }
      if (ABool != false) {
        size += 1 + 1;
      }
      if (AString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AString);
      }
      if (SomeBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SomeBytes);
      }
      if (aStruct_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AStruct);
      }
      size += aStructMap_.CalculateSize(_map_aStructMap_codec);
      size += someStruct_.CalculateSize(_repeated_someStruct_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FetchProtoDataResponse other) {
      if (other == null) {
        return;
      }
      someInt32_.Add(other.someInt32_);
      someInt64_.Add(other.someInt64_);
      someFloat_.Add(other.someFloat_);
      someDouble_.Add(other.someDouble_);
      someBool_.Add(other.someBool_);
      someString_.Add(other.someString_);
      if (other.AInt32 != 0) {
        AInt32 = other.AInt32;
      }
      if (other.AInt64 != 0L) {
        AInt64 = other.AInt64;
      }
      if (other.AFloat != 0F) {
        AFloat = other.AFloat;
      }
      if (other.ADouble != 0D) {
        ADouble = other.ADouble;
      }
      if (other.ABool != false) {
        ABool = other.ABool;
      }
      if (other.AString.Length != 0) {
        AString = other.AString;
      }
      if (other.SomeBytes.Length != 0) {
        SomeBytes = other.SomeBytes;
      }
      if (other.aStruct_ != null) {
        if (aStruct_ == null) {
          AStruct = new global::Protos.AStruct();
        }
        AStruct.MergeFrom(other.AStruct);
      }
      aStructMap_.Add(other.aStructMap_);
      someStruct_.Add(other.someStruct_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            someInt32_.AddEntriesFrom(input, _repeated_someInt32_codec);
            break;
          }
          case 18:
          case 16: {
            someInt64_.AddEntriesFrom(input, _repeated_someInt64_codec);
            break;
          }
          case 26:
          case 29: {
            someFloat_.AddEntriesFrom(input, _repeated_someFloat_codec);
            break;
          }
          case 34:
          case 33: {
            someDouble_.AddEntriesFrom(input, _repeated_someDouble_codec);
            break;
          }
          case 42:
          case 40: {
            someBool_.AddEntriesFrom(input, _repeated_someBool_codec);
            break;
          }
          case 50: {
            someString_.AddEntriesFrom(input, _repeated_someString_codec);
            break;
          }
          case 56: {
            AInt32 = input.ReadInt32();
            break;
          }
          case 64: {
            AInt64 = input.ReadInt64();
            break;
          }
          case 77: {
            AFloat = input.ReadFloat();
            break;
          }
          case 81: {
            ADouble = input.ReadDouble();
            break;
          }
          case 88: {
            ABool = input.ReadBool();
            break;
          }
          case 98: {
            AString = input.ReadString();
            break;
          }
          case 106: {
            SomeBytes = input.ReadBytes();
            break;
          }
          case 114: {
            if (aStruct_ == null) {
              AStruct = new global::Protos.AStruct();
            }
            input.ReadMessage(AStruct);
            break;
          }
          case 122: {
            aStructMap_.AddEntriesFrom(input, _map_aStructMap_codec);
            break;
          }
          case 130: {
            someStruct_.AddEntriesFrom(input, _repeated_someStruct_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AStruct : pb::IMessage<AStruct> {
    private static readonly pb::MessageParser<AStruct> _parser = new pb::MessageParser<AStruct>(() => new AStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.BenchmarkReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AStruct(AStruct other) : this() {
      someInt32_ = other.someInt32_.Clone();
      someInt64_ = other.someInt64_.Clone();
      someFloat_ = other.someFloat_.Clone();
      someDouble_ = other.someDouble_.Clone();
      someBool_ = other.someBool_.Clone();
      someString_ = other.someString_.Clone();
      aInt32_ = other.aInt32_;
      aInt64_ = other.aInt64_;
      aFloat_ = other.aFloat_;
      aDouble_ = other.aDouble_;
      aBool_ = other.aBool_;
      aString_ = other.aString_;
      someBytes_ = other.someBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AStruct Clone() {
      return new AStruct(this);
    }

    /// <summary>Field number for the "some_int32" field.</summary>
    public const int SomeInt32FieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_someInt32_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> someInt32_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> SomeInt32 {
      get { return someInt32_; }
    }

    /// <summary>Field number for the "some_int64" field.</summary>
    public const int SomeInt64FieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_someInt64_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> someInt64_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> SomeInt64 {
      get { return someInt64_; }
    }

    /// <summary>Field number for the "some_float" field.</summary>
    public const int SomeFloatFieldNumber = 3;
    private static readonly pb::FieldCodec<float> _repeated_someFloat_codec
        = pb::FieldCodec.ForFloat(26);
    private readonly pbc::RepeatedField<float> someFloat_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> SomeFloat {
      get { return someFloat_; }
    }

    /// <summary>Field number for the "some_double" field.</summary>
    public const int SomeDoubleFieldNumber = 4;
    private static readonly pb::FieldCodec<double> _repeated_someDouble_codec
        = pb::FieldCodec.ForDouble(34);
    private readonly pbc::RepeatedField<double> someDouble_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> SomeDouble {
      get { return someDouble_; }
    }

    /// <summary>Field number for the "some_bool" field.</summary>
    public const int SomeBoolFieldNumber = 5;
    private static readonly pb::FieldCodec<bool> _repeated_someBool_codec
        = pb::FieldCodec.ForBool(42);
    private readonly pbc::RepeatedField<bool> someBool_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> SomeBool {
      get { return someBool_; }
    }

    /// <summary>Field number for the "some_string" field.</summary>
    public const int SomeStringFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_someString_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> someString_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SomeString {
      get { return someString_; }
    }

    /// <summary>Field number for the "a_int32" field.</summary>
    public const int AInt32FieldNumber = 7;
    private int aInt32_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AInt32 {
      get { return aInt32_; }
      set {
        aInt32_ = value;
      }
    }

    /// <summary>Field number for the "a_int64" field.</summary>
    public const int AInt64FieldNumber = 8;
    private long aInt64_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AInt64 {
      get { return aInt64_; }
      set {
        aInt64_ = value;
      }
    }

    /// <summary>Field number for the "a_float" field.</summary>
    public const int AFloatFieldNumber = 9;
    private float aFloat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AFloat {
      get { return aFloat_; }
      set {
        aFloat_ = value;
      }
    }

    /// <summary>Field number for the "a_double" field.</summary>
    public const int ADoubleFieldNumber = 10;
    private double aDouble_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ADouble {
      get { return aDouble_; }
      set {
        aDouble_ = value;
      }
    }

    /// <summary>Field number for the "a_bool" field.</summary>
    public const int ABoolFieldNumber = 11;
    private bool aBool_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ABool {
      get { return aBool_; }
      set {
        aBool_ = value;
      }
    }

    /// <summary>Field number for the "a_string" field.</summary>
    public const int AStringFieldNumber = 12;
    private string aString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AString {
      get { return aString_; }
      set {
        aString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "some_bytes" field.</summary>
    public const int SomeBytesFieldNumber = 13;
    private pb::ByteString someBytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SomeBytes {
      get { return someBytes_; }
      set {
        someBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!someInt32_.Equals(other.someInt32_)) return false;
      if(!someInt64_.Equals(other.someInt64_)) return false;
      if(!someFloat_.Equals(other.someFloat_)) return false;
      if(!someDouble_.Equals(other.someDouble_)) return false;
      if(!someBool_.Equals(other.someBool_)) return false;
      if(!someString_.Equals(other.someString_)) return false;
      if (AInt32 != other.AInt32) return false;
      if (AInt64 != other.AInt64) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AFloat, other.AFloat)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ADouble, other.ADouble)) return false;
      if (ABool != other.ABool) return false;
      if (AString != other.AString) return false;
      if (SomeBytes != other.SomeBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= someInt32_.GetHashCode();
      hash ^= someInt64_.GetHashCode();
      hash ^= someFloat_.GetHashCode();
      hash ^= someDouble_.GetHashCode();
      hash ^= someBool_.GetHashCode();
      hash ^= someString_.GetHashCode();
      if (AInt32 != 0) hash ^= AInt32.GetHashCode();
      if (AInt64 != 0L) hash ^= AInt64.GetHashCode();
      if (AFloat != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AFloat);
      if (ADouble != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ADouble);
      if (ABool != false) hash ^= ABool.GetHashCode();
      if (AString.Length != 0) hash ^= AString.GetHashCode();
      if (SomeBytes.Length != 0) hash ^= SomeBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      someInt32_.WriteTo(output, _repeated_someInt32_codec);
      someInt64_.WriteTo(output, _repeated_someInt64_codec);
      someFloat_.WriteTo(output, _repeated_someFloat_codec);
      someDouble_.WriteTo(output, _repeated_someDouble_codec);
      someBool_.WriteTo(output, _repeated_someBool_codec);
      someString_.WriteTo(output, _repeated_someString_codec);
      if (AInt32 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AInt32);
      }
      if (AInt64 != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(AInt64);
      }
      if (AFloat != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(AFloat);
      }
      if (ADouble != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(ADouble);
      }
      if (ABool != false) {
        output.WriteRawTag(88);
        output.WriteBool(ABool);
      }
      if (AString.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(AString);
      }
      if (SomeBytes.Length != 0) {
        output.WriteRawTag(106);
        output.WriteBytes(SomeBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += someInt32_.CalculateSize(_repeated_someInt32_codec);
      size += someInt64_.CalculateSize(_repeated_someInt64_codec);
      size += someFloat_.CalculateSize(_repeated_someFloat_codec);
      size += someDouble_.CalculateSize(_repeated_someDouble_codec);
      size += someBool_.CalculateSize(_repeated_someBool_codec);
      size += someString_.CalculateSize(_repeated_someString_codec);
      if (AInt32 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AInt32);
      }
      if (AInt64 != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AInt64);
      }
      if (AFloat != 0F) {
        size += 1 + 4;
      }
      if (ADouble != 0D) {
        size += 1 + 8;
      }
      if (ABool != false) {
        size += 1 + 1;
      }
      if (AString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AString);
      }
      if (SomeBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SomeBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AStruct other) {
      if (other == null) {
        return;
      }
      someInt32_.Add(other.someInt32_);
      someInt64_.Add(other.someInt64_);
      someFloat_.Add(other.someFloat_);
      someDouble_.Add(other.someDouble_);
      someBool_.Add(other.someBool_);
      someString_.Add(other.someString_);
      if (other.AInt32 != 0) {
        AInt32 = other.AInt32;
      }
      if (other.AInt64 != 0L) {
        AInt64 = other.AInt64;
      }
      if (other.AFloat != 0F) {
        AFloat = other.AFloat;
      }
      if (other.ADouble != 0D) {
        ADouble = other.ADouble;
      }
      if (other.ABool != false) {
        ABool = other.ABool;
      }
      if (other.AString.Length != 0) {
        AString = other.AString;
      }
      if (other.SomeBytes.Length != 0) {
        SomeBytes = other.SomeBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            someInt32_.AddEntriesFrom(input, _repeated_someInt32_codec);
            break;
          }
          case 18:
          case 16: {
            someInt64_.AddEntriesFrom(input, _repeated_someInt64_codec);
            break;
          }
          case 26:
          case 29: {
            someFloat_.AddEntriesFrom(input, _repeated_someFloat_codec);
            break;
          }
          case 34:
          case 33: {
            someDouble_.AddEntriesFrom(input, _repeated_someDouble_codec);
            break;
          }
          case 42:
          case 40: {
            someBool_.AddEntriesFrom(input, _repeated_someBool_codec);
            break;
          }
          case 50: {
            someString_.AddEntriesFrom(input, _repeated_someString_codec);
            break;
          }
          case 56: {
            AInt32 = input.ReadInt32();
            break;
          }
          case 64: {
            AInt64 = input.ReadInt64();
            break;
          }
          case 77: {
            AFloat = input.ReadFloat();
            break;
          }
          case 81: {
            ADouble = input.ReadDouble();
            break;
          }
          case 88: {
            ABool = input.ReadBool();
            break;
          }
          case 98: {
            AString = input.ReadString();
            break;
          }
          case 106: {
            SomeBytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
